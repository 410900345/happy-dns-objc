// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		6B6090D36D2ECCD34FCE6DAE /* libPods-HappyDNS_iOSTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = B7A5E527D9CF80E564A69D85 /* libPods-HappyDNS_iOSTests.a */; };
		71FB87ACF7AF0163E3F8AF2F /* libPods-HappyDNS_MacTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 04A4DFEA159C0945AFABEA3A /* libPods-HappyDNS_MacTests.a */; };
		DF1552441B3A9536008D3E7C /* ResolverTest.m in Sources */ = {isa = PBXBuildFile; fileRef = DF1552431B3A9536008D3E7C /* ResolverTest.m */; };
		DF1552451B3A9536008D3E7C /* ResolverTest.m in Sources */ = {isa = PBXBuildFile; fileRef = DF1552431B3A9536008D3E7C /* ResolverTest.m */; };
		DF1552471B3A97EB008D3E7C /* libresolv.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = DF1552461B3A97EB008D3E7C /* libresolv.dylib */; };
		DF1552491B3A97F7008D3E7C /* libresolv.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = DF1552481B3A97F7008D3E7C /* libresolv.dylib */; };
		DF15524B1B3A98E2008D3E7C /* libresolv.9.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = DF15524A1B3A98E2008D3E7C /* libresolv.9.dylib */; };
		DF15524C1B3A994F008D3E7C /* libresolv.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = DF1552461B3A97EB008D3E7C /* libresolv.dylib */; };
		DF22C0C31B37B9B90010FEBF /* HappyDNS.h in Headers */ = {isa = PBXBuildFile; fileRef = DF22C0C21B37B9B90010FEBF /* HappyDNS.h */; };
		DF22C0CB1B37B9B90010FEBF /* libHappyDNS.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = DF22C0BF1B37B9B90010FEBF /* libHappyDNS.dylib */; };
		DF801F641B396D5100866FDE /* QNRecord.h in Headers */ = {isa = PBXBuildFile; fileRef = DF801F621B396D5100866FDE /* QNRecord.h */; };
		DF801F651B396D5100866FDE /* QNRecord.m in Sources */ = {isa = PBXBuildFile; fileRef = DF801F631B396D5100866FDE /* QNRecord.m */; };
		DF801F661B396D5100866FDE /* QNRecord.m in Sources */ = {isa = PBXBuildFile; fileRef = DF801F631B396D5100866FDE /* QNRecord.m */; };
		DF801F691B396DA000866FDE /* QNDnsManager.h in Headers */ = {isa = PBXBuildFile; fileRef = DF801F671B396DA000866FDE /* QNDnsManager.h */; };
		DF801F6A1B396DA000866FDE /* QNDnsManager.m in Sources */ = {isa = PBXBuildFile; fileRef = DF801F681B396DA000866FDE /* QNDnsManager.m */; };
		DF801F6B1B396DA000866FDE /* QNDnsManager.m in Sources */ = {isa = PBXBuildFile; fileRef = DF801F681B396DA000866FDE /* QNDnsManager.m */; };
		DF801F731B396E3C00866FDE /* QNResolver.h in Headers */ = {isa = PBXBuildFile; fileRef = DF801F711B396E3C00866FDE /* QNResolver.h */; };
		DF801F741B396E3C00866FDE /* QNResolver.m in Sources */ = {isa = PBXBuildFile; fileRef = DF801F721B396E3C00866FDE /* QNResolver.m */; };
		DF801F751B396E3C00866FDE /* QNResolver.m in Sources */ = {isa = PBXBuildFile; fileRef = DF801F721B396E3C00866FDE /* QNResolver.m */; };
		DF801F7D1B396E7600866FDE /* QNDnspodFree.h in Headers */ = {isa = PBXBuildFile; fileRef = DF801F7B1B396E7600866FDE /* QNDnspodFree.h */; };
		DF801F7E1B396E7600866FDE /* QNDnspodFree.m in Sources */ = {isa = PBXBuildFile; fileRef = DF801F7C1B396E7600866FDE /* QNDnspodFree.m */; };
		DF801F7F1B396E7600866FDE /* QNDnspodFree.m in Sources */ = {isa = PBXBuildFile; fileRef = DF801F7C1B396E7600866FDE /* QNDnspodFree.m */; };
		DF801F821B396E9A00866FDE /* QNHosts.h in Headers */ = {isa = PBXBuildFile; fileRef = DF801F801B396E9A00866FDE /* QNHosts.h */; };
		DF801F831B396E9A00866FDE /* QNHosts.m in Sources */ = {isa = PBXBuildFile; fileRef = DF801F811B396E9A00866FDE /* QNHosts.m */; };
		DF801F841B396E9A00866FDE /* QNHosts.m in Sources */ = {isa = PBXBuildFile; fileRef = DF801F811B396E9A00866FDE /* QNHosts.m */; };
		DF801F871B396F5500866FDE /* QNResolverDelegate.h in Headers */ = {isa = PBXBuildFile; fileRef = DF801F851B396F5500866FDE /* QNResolverDelegate.h */; };
		DF801F8C1B39743200866FDE /* QNDomain.h in Headers */ = {isa = PBXBuildFile; fileRef = DF801F8A1B39743200866FDE /* QNDomain.h */; };
		DF801F8D1B39743200866FDE /* QNDomain.m in Sources */ = {isa = PBXBuildFile; fileRef = DF801F8B1B39743200866FDE /* QNDomain.m */; };
		DF801F8E1B39743200866FDE /* QNDomain.m in Sources */ = {isa = PBXBuildFile; fileRef = DF801F8B1B39743200866FDE /* QNDomain.m */; };
		DF801F981B3A4F4D00866FDE /* HappyDNS.h in CopyFiles */ = {isa = PBXBuildFile; fileRef = DF801F971B3A4F4D00866FDE /* HappyDNS.h */; };
		DF801F9A1B3A4F4D00866FDE /* HappyDNS.m in Sources */ = {isa = PBXBuildFile; fileRef = DF801F991B3A4F4D00866FDE /* HappyDNS.m */; };
		DF801FA01B3A4F4D00866FDE /* libHappyDNS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = DF801F951B3A4F4D00866FDE /* libHappyDNS.a */; };
		DF801FAE1B3A537800866FDE /* QNDnsManager.h in Sources */ = {isa = PBXBuildFile; fileRef = DF801F671B396DA000866FDE /* QNDnsManager.h */; };
		DF801FAF1B3A537800866FDE /* QNDnsManager.m in Sources */ = {isa = PBXBuildFile; fileRef = DF801F681B396DA000866FDE /* QNDnsManager.m */; };
		DF801FB01B3A537800866FDE /* QNRecord.h in Sources */ = {isa = PBXBuildFile; fileRef = DF801F621B396D5100866FDE /* QNRecord.h */; };
		DF801FB11B3A537800866FDE /* QNRecord.m in Sources */ = {isa = PBXBuildFile; fileRef = DF801F631B396D5100866FDE /* QNRecord.m */; };
		DF801FB21B3A537800866FDE /* QNResolverDelegate.h in Sources */ = {isa = PBXBuildFile; fileRef = DF801F851B396F5500866FDE /* QNResolverDelegate.h */; };
		DF801FB31B3A537800866FDE /* QNDomain.h in Sources */ = {isa = PBXBuildFile; fileRef = DF801F8A1B39743200866FDE /* QNDomain.h */; };
		DF801FB41B3A537800866FDE /* QNDomain.m in Sources */ = {isa = PBXBuildFile; fileRef = DF801F8B1B39743200866FDE /* QNDomain.m */; };
		DF801FB61B3A537800866FDE /* QNResolver.h in Sources */ = {isa = PBXBuildFile; fileRef = DF801F711B396E3C00866FDE /* QNResolver.h */; };
		DF801FB71B3A537800866FDE /* QNResolver.m in Sources */ = {isa = PBXBuildFile; fileRef = DF801F721B396E3C00866FDE /* QNResolver.m */; };
		DF801FBA1B3A537800866FDE /* QNHosts.h in Sources */ = {isa = PBXBuildFile; fileRef = DF801F801B396E9A00866FDE /* QNHosts.h */; };
		DF801FBB1B3A537800866FDE /* QNHosts.m in Sources */ = {isa = PBXBuildFile; fileRef = DF801F811B396E9A00866FDE /* QNHosts.m */; };
		DF801FBC1B3A537800866FDE /* QNDnspodFree.h in Sources */ = {isa = PBXBuildFile; fileRef = DF801F7B1B396E7600866FDE /* QNDnspodFree.h */; };
		DF801FBD1B3A537800866FDE /* QNDnspodFree.m in Sources */ = {isa = PBXBuildFile; fileRef = DF801F7C1B396E7600866FDE /* QNDnspodFree.m */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		DF22C0CC1B37B9B90010FEBF /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DF22C0B71B37B9B90010FEBF /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = DF22C0BE1B37B9B90010FEBF;
			remoteInfo = HappyDNS;
		};
		DF801FA11B3A4F4D00866FDE /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DF22C0B71B37B9B90010FEBF /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = DF801F941B3A4F4D00866FDE;
			remoteInfo = HappyDNS;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXCopyFilesBuildPhase section */
		DF801F931B3A4F4D00866FDE /* CopyFiles */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = "include/$(PRODUCT_NAME)";
			dstSubfolderSpec = 16;
			files = (
				DF801F981B3A4F4D00866FDE /* HappyDNS.h in CopyFiles */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		04A4DFEA159C0945AFABEA3A /* libPods-HappyDNS_MacTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-HappyDNS_MacTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		1DEA89BB118E6B53C505D328 /* Pods-HappyDNS_MacTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-HappyDNS_MacTests.release.xcconfig"; path = "Pods/Target Support Files/Pods-HappyDNS_MacTests/Pods-HappyDNS_MacTests.release.xcconfig"; sourceTree = "<group>"; };
		1E328F479E1702CED8C0DDDC /* Pods-HappyDNS_MacTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-HappyDNS_MacTests.debug.xcconfig"; path = "Pods/Target Support Files/Pods-HappyDNS_MacTests/Pods-HappyDNS_MacTests.debug.xcconfig"; sourceTree = "<group>"; };
		2A93CF6550EE709B01A78948 /* Pods-HappyDNS_iOSTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-HappyDNS_iOSTests.release.xcconfig"; path = "Pods/Target Support Files/Pods-HappyDNS_iOSTests/Pods-HappyDNS_iOSTests.release.xcconfig"; sourceTree = "<group>"; };
		A7C629E8C4C0F06862464808 /* Pods-HappyDNS_iOSTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-HappyDNS_iOSTests.debug.xcconfig"; path = "Pods/Target Support Files/Pods-HappyDNS_iOSTests/Pods-HappyDNS_iOSTests.debug.xcconfig"; sourceTree = "<group>"; };
		B7A5E527D9CF80E564A69D85 /* libPods-HappyDNS_iOSTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-HappyDNS_iOSTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		DF1552431B3A9536008D3E7C /* ResolverTest.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = ResolverTest.m; sourceTree = "<group>"; };
		DF1552461B3A97EB008D3E7C /* libresolv.dylib */ = {isa = PBXFileReference; lastKnownFileType = "compiled.mach-o.dylib"; name = libresolv.dylib; path = usr/lib/libresolv.dylib; sourceTree = SDKROOT; };
		DF1552481B3A97F7008D3E7C /* libresolv.dylib */ = {isa = PBXFileReference; lastKnownFileType = "compiled.mach-o.dylib"; name = libresolv.dylib; path = Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS8.3.sdk/usr/lib/libresolv.dylib; sourceTree = DEVELOPER_DIR; };
		DF15524A1B3A98E2008D3E7C /* libresolv.9.dylib */ = {isa = PBXFileReference; lastKnownFileType = "compiled.mach-o.dylib"; name = libresolv.9.dylib; path = usr/lib/libresolv.9.dylib; sourceTree = SDKROOT; };
		DF22C0BF1B37B9B90010FEBF /* libHappyDNS.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; includeInIndex = 0; path = libHappyDNS.dylib; sourceTree = BUILT_PRODUCTS_DIR; };
		DF22C0C21B37B9B90010FEBF /* HappyDNS.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = HappyDNS.h; sourceTree = "<group>"; };
		DF22C0CA1B37B9B90010FEBF /* HappyDNS_MacTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = HappyDNS_MacTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		DF22C0D01B37B9B90010FEBF /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		DF801F621B396D5100866FDE /* QNRecord.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = QNRecord.h; path = Common/QNRecord.h; sourceTree = "<group>"; };
		DF801F631B396D5100866FDE /* QNRecord.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = QNRecord.m; path = Common/QNRecord.m; sourceTree = "<group>"; };
		DF801F671B396DA000866FDE /* QNDnsManager.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = QNDnsManager.h; path = Common/QNDnsManager.h; sourceTree = "<group>"; };
		DF801F681B396DA000866FDE /* QNDnsManager.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = QNDnsManager.m; path = Common/QNDnsManager.m; sourceTree = "<group>"; };
		DF801F711B396E3C00866FDE /* QNResolver.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = QNResolver.h; path = Local/QNResolver.h; sourceTree = "<group>"; };
		DF801F721B396E3C00866FDE /* QNResolver.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = QNResolver.m; path = Local/QNResolver.m; sourceTree = "<group>"; };
		DF801F7B1B396E7600866FDE /* QNDnspodFree.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = QNDnspodFree.h; path = Http/QNDnspodFree.h; sourceTree = "<group>"; };
		DF801F7C1B396E7600866FDE /* QNDnspodFree.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = QNDnspodFree.m; path = Http/QNDnspodFree.m; sourceTree = "<group>"; };
		DF801F801B396E9A00866FDE /* QNHosts.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = QNHosts.h; path = Local/QNHosts.h; sourceTree = "<group>"; };
		DF801F811B396E9A00866FDE /* QNHosts.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = QNHosts.m; path = Local/QNHosts.m; sourceTree = "<group>"; };
		DF801F851B396F5500866FDE /* QNResolverDelegate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = QNResolverDelegate.h; path = Common/QNResolverDelegate.h; sourceTree = "<group>"; };
		DF801F8A1B39743200866FDE /* QNDomain.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = QNDomain.h; path = Common/QNDomain.h; sourceTree = "<group>"; };
		DF801F8B1B39743200866FDE /* QNDomain.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = QNDomain.m; path = Common/QNDomain.m; sourceTree = "<group>"; };
		DF801F951B3A4F4D00866FDE /* libHappyDNS.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = libHappyDNS.a; sourceTree = BUILT_PRODUCTS_DIR; };
		DF801F971B3A4F4D00866FDE /* HappyDNS.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = HappyDNS.h; sourceTree = "<group>"; };
		DF801F991B3A4F4D00866FDE /* HappyDNS.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = HappyDNS.m; sourceTree = "<group>"; };
		DF801F9F1B3A4F4D00866FDE /* HappyDNS_iOSTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = HappyDNS_iOSTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		DF801FA51B3A4F4D00866FDE /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		DF22C0BC1B37B9B90010FEBF /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				DF15524C1B3A994F008D3E7C /* libresolv.dylib in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		DF22C0C71B37B9B90010FEBF /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				DF15524B1B3A98E2008D3E7C /* libresolv.9.dylib in Frameworks */,
				DF1552471B3A97EB008D3E7C /* libresolv.dylib in Frameworks */,
				DF22C0CB1B37B9B90010FEBF /* libHappyDNS.dylib in Frameworks */,
				71FB87ACF7AF0163E3F8AF2F /* libPods-HappyDNS_MacTests.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		DF801F921B3A4F4D00866FDE /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		DF801F9C1B3A4F4D00866FDE /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				DF1552491B3A97F7008D3E7C /* libresolv.dylib in Frameworks */,
				DF801FA01B3A4F4D00866FDE /* libHappyDNS.a in Frameworks */,
				6B6090D36D2ECCD34FCE6DAE /* libPods-HappyDNS_iOSTests.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		3AA9FDBAFF7915B2F079FC24 /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				DF15524A1B3A98E2008D3E7C /* libresolv.9.dylib */,
				DF1552481B3A97F7008D3E7C /* libresolv.dylib */,
				DF1552461B3A97EB008D3E7C /* libresolv.dylib */,
				04A4DFEA159C0945AFABEA3A /* libPods-HappyDNS_MacTests.a */,
				B7A5E527D9CF80E564A69D85 /* libPods-HappyDNS_iOSTests.a */,
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		891FECAD5C705DE22D01165A /* Pods */ = {
			isa = PBXGroup;
			children = (
				1E328F479E1702CED8C0DDDC /* Pods-HappyDNS_MacTests.debug.xcconfig */,
				1DEA89BB118E6B53C505D328 /* Pods-HappyDNS_MacTests.release.xcconfig */,
				A7C629E8C4C0F06862464808 /* Pods-HappyDNS_iOSTests.debug.xcconfig */,
				2A93CF6550EE709B01A78948 /* Pods-HappyDNS_iOSTests.release.xcconfig */,
			);
			name = Pods;
			sourceTree = "<group>";
		};
		DF22C0B61B37B9B90010FEBF = {
			isa = PBXGroup;
			children = (
				DF22C0C11B37B9B90010FEBF /* HappyDNS */,
				DF22C0CE1B37B9B90010FEBF /* HappyDNSTests */,
				DF801F961B3A4F4D00866FDE /* HappyDNS */,
				DF801FA31B3A4F4D00866FDE /* HappyDNSTests */,
				DF22C0C01B37B9B90010FEBF /* Products */,
				891FECAD5C705DE22D01165A /* Pods */,
				3AA9FDBAFF7915B2F079FC24 /* Frameworks */,
			);
			sourceTree = "<group>";
		};
		DF22C0C01B37B9B90010FEBF /* Products */ = {
			isa = PBXGroup;
			children = (
				DF22C0BF1B37B9B90010FEBF /* libHappyDNS.dylib */,
				DF22C0CA1B37B9B90010FEBF /* HappyDNS_MacTests.xctest */,
				DF801F951B3A4F4D00866FDE /* libHappyDNS.a */,
				DF801F9F1B3A4F4D00866FDE /* HappyDNS_iOSTests.xctest */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		DF22C0C11B37B9B90010FEBF /* HappyDNS */ = {
			isa = PBXGroup;
			children = (
				DF801F5C1B3944BA00866FDE /* Util */,
				DF801F5B1B3944AF00866FDE /* Common */,
				DF801F5A1B3944A900866FDE /* Local */,
				DF801F591B39449C00866FDE /* Http */,
				DF22C0C21B37B9B90010FEBF /* HappyDNS.h */,
			);
			path = HappyDNS;
			sourceTree = "<group>";
		};
		DF22C0CE1B37B9B90010FEBF /* HappyDNSTests */ = {
			isa = PBXGroup;
			children = (
				DF22C0CF1B37B9B90010FEBF /* Supporting Files */,
				DF1552431B3A9536008D3E7C /* ResolverTest.m */,
			);
			path = HappyDNSTests;
			sourceTree = "<group>";
		};
		DF22C0CF1B37B9B90010FEBF /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				DF22C0D01B37B9B90010FEBF /* Info.plist */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		DF801F591B39449C00866FDE /* Http */ = {
			isa = PBXGroup;
			children = (
				DF801F7B1B396E7600866FDE /* QNDnspodFree.h */,
				DF801F7C1B396E7600866FDE /* QNDnspodFree.m */,
			);
			name = Http;
			sourceTree = "<group>";
		};
		DF801F5A1B3944A900866FDE /* Local */ = {
			isa = PBXGroup;
			children = (
				DF801F711B396E3C00866FDE /* QNResolver.h */,
				DF801F721B396E3C00866FDE /* QNResolver.m */,
				DF801F801B396E9A00866FDE /* QNHosts.h */,
				DF801F811B396E9A00866FDE /* QNHosts.m */,
			);
			name = Local;
			sourceTree = "<group>";
		};
		DF801F5B1B3944AF00866FDE /* Common */ = {
			isa = PBXGroup;
			children = (
				DF801F671B396DA000866FDE /* QNDnsManager.h */,
				DF801F681B396DA000866FDE /* QNDnsManager.m */,
				DF801F621B396D5100866FDE /* QNRecord.h */,
				DF801F631B396D5100866FDE /* QNRecord.m */,
				DF801F851B396F5500866FDE /* QNResolverDelegate.h */,
				DF801F8A1B39743200866FDE /* QNDomain.h */,
				DF801F8B1B39743200866FDE /* QNDomain.m */,
			);
			name = Common;
			sourceTree = "<group>";
		};
		DF801F5C1B3944BA00866FDE /* Util */ = {
			isa = PBXGroup;
			children = (
			);
			name = Util;
			sourceTree = "<group>";
		};
		DF801F961B3A4F4D00866FDE /* HappyDNS */ = {
			isa = PBXGroup;
			children = (
				DF801F971B3A4F4D00866FDE /* HappyDNS.h */,
				DF801F991B3A4F4D00866FDE /* HappyDNS.m */,
			);
			path = HappyDNS;
			sourceTree = "<group>";
		};
		DF801FA31B3A4F4D00866FDE /* HappyDNSTests */ = {
			isa = PBXGroup;
			children = (
				DF801FA41B3A4F4D00866FDE /* Supporting Files */,
			);
			path = HappyDNSTests;
			sourceTree = "<group>";
		};
		DF801FA41B3A4F4D00866FDE /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				DF801FA51B3A4F4D00866FDE /* Info.plist */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXHeadersBuildPhase section */
		DF22C0BD1B37B9B90010FEBF /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				DF801F691B396DA000866FDE /* QNDnsManager.h in Headers */,
				DF22C0C31B37B9B90010FEBF /* HappyDNS.h in Headers */,
				DF801F641B396D5100866FDE /* QNRecord.h in Headers */,
				DF801F731B396E3C00866FDE /* QNResolver.h in Headers */,
				DF801F871B396F5500866FDE /* QNResolverDelegate.h in Headers */,
				DF801F7D1B396E7600866FDE /* QNDnspodFree.h in Headers */,
				DF801F8C1B39743200866FDE /* QNDomain.h in Headers */,
				DF801F821B396E9A00866FDE /* QNHosts.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXHeadersBuildPhase section */

/* Begin PBXNativeTarget section */
		DF22C0BE1B37B9B90010FEBF /* HappyDNS_Mac */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = DF22C0D31B37B9B90010FEBF /* Build configuration list for PBXNativeTarget "HappyDNS_Mac" */;
			buildPhases = (
				DF22C0BB1B37B9B90010FEBF /* Sources */,
				DF22C0BC1B37B9B90010FEBF /* Frameworks */,
				DF22C0BD1B37B9B90010FEBF /* Headers */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = HappyDNS_Mac;
			productName = HappyDNS;
			productReference = DF22C0BF1B37B9B90010FEBF /* libHappyDNS.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		DF22C0C91B37B9B90010FEBF /* HappyDNS_MacTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = DF22C0D61B37B9B90010FEBF /* Build configuration list for PBXNativeTarget "HappyDNS_MacTests" */;
			buildPhases = (
				88B0FB59E227F28073D491B1 /* Check Pods Manifest.lock */,
				DF22C0C61B37B9B90010FEBF /* Sources */,
				DF22C0C71B37B9B90010FEBF /* Frameworks */,
				DF22C0C81B37B9B90010FEBF /* Resources */,
				587D8C623415DC2765ADC3FB /* Copy Pods Resources */,
			);
			buildRules = (
			);
			dependencies = (
				DF22C0CD1B37B9B90010FEBF /* PBXTargetDependency */,
			);
			name = HappyDNS_MacTests;
			productName = HappyDNSTests;
			productReference = DF22C0CA1B37B9B90010FEBF /* HappyDNS_MacTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
		DF801F941B3A4F4D00866FDE /* HappyDNS_iOS */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = DF801FA61B3A4F4D00866FDE /* Build configuration list for PBXNativeTarget "HappyDNS_iOS" */;
			buildPhases = (
				DF801F911B3A4F4D00866FDE /* Sources */,
				DF801F921B3A4F4D00866FDE /* Frameworks */,
				DF801F931B3A4F4D00866FDE /* CopyFiles */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = HappyDNS_iOS;
			productName = HappyDNS;
			productReference = DF801F951B3A4F4D00866FDE /* libHappyDNS.a */;
			productType = "com.apple.product-type.library.static";
		};
		DF801F9E1B3A4F4D00866FDE /* HappyDNS_iOSTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = DF801FA91B3A4F4D00866FDE /* Build configuration list for PBXNativeTarget "HappyDNS_iOSTests" */;
			buildPhases = (
				9215D0CC5EAB9CCB0A43A44F /* Check Pods Manifest.lock */,
				DF801F9B1B3A4F4D00866FDE /* Sources */,
				DF801F9C1B3A4F4D00866FDE /* Frameworks */,
				DF801F9D1B3A4F4D00866FDE /* Resources */,
				5B3D458851A38A700D83AAEE /* Copy Pods Resources */,
			);
			buildRules = (
			);
			dependencies = (
				DF801FA21B3A4F4D00866FDE /* PBXTargetDependency */,
			);
			name = HappyDNS_iOSTests;
			productName = HappyDNSTests;
			productReference = DF801F9F1B3A4F4D00866FDE /* HappyDNS_iOSTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		DF22C0B71B37B9B90010FEBF /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 0630;
				ORGANIZATIONNAME = "Qiniu Cloud Storage";
				TargetAttributes = {
					DF22C0BE1B37B9B90010FEBF = {
						CreatedOnToolsVersion = 6.3.2;
					};
					DF22C0C91B37B9B90010FEBF = {
						CreatedOnToolsVersion = 6.3.2;
					};
					DF801F941B3A4F4D00866FDE = {
						CreatedOnToolsVersion = 6.3.2;
					};
					DF801F9E1B3A4F4D00866FDE = {
						CreatedOnToolsVersion = 6.3.2;
					};
				};
			};
			buildConfigurationList = DF22C0BA1B37B9B90010FEBF /* Build configuration list for PBXProject "HappyDNS" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = DF22C0B61B37B9B90010FEBF;
			productRefGroup = DF22C0C01B37B9B90010FEBF /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				DF22C0BE1B37B9B90010FEBF /* HappyDNS_Mac */,
				DF22C0C91B37B9B90010FEBF /* HappyDNS_MacTests */,
				DF801F941B3A4F4D00866FDE /* HappyDNS_iOS */,
				DF801F9E1B3A4F4D00866FDE /* HappyDNS_iOSTests */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		DF22C0C81B37B9B90010FEBF /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		DF801F9D1B3A4F4D00866FDE /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXShellScriptBuildPhase section */
		587D8C623415DC2765ADC3FB /* Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Copy Pods Resources";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${SRCROOT}/Pods/Target Support Files/Pods-HappyDNS_MacTests/Pods-HappyDNS_MacTests-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		5B3D458851A38A700D83AAEE /* Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Copy Pods Resources";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${SRCROOT}/Pods/Target Support Files/Pods-HappyDNS_iOSTests/Pods-HappyDNS_iOSTests-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		88B0FB59E227F28073D491B1 /* Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Check Pods Manifest.lock";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_ROOT}/../Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [[ $? != 0 ]] ; then\n    cat << EOM\nerror: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\nEOM\n    exit 1\nfi\n";
			showEnvVarsInLog = 0;
		};
		9215D0CC5EAB9CCB0A43A44F /* Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Check Pods Manifest.lock";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_ROOT}/../Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [[ $? != 0 ]] ; then\n    cat << EOM\nerror: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\nEOM\n    exit 1\nfi\n";
			showEnvVarsInLog = 0;
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		DF22C0BB1B37B9B90010FEBF /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				DF801F741B396E3C00866FDE /* QNResolver.m in Sources */,
				DF801F6A1B396DA000866FDE /* QNDnsManager.m in Sources */,
				DF801F7E1B396E7600866FDE /* QNDnspodFree.m in Sources */,
				DF801F651B396D5100866FDE /* QNRecord.m in Sources */,
				DF801F8D1B39743200866FDE /* QNDomain.m in Sources */,
				DF801F831B396E9A00866FDE /* QNHosts.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		DF22C0C61B37B9B90010FEBF /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				DF801F751B396E3C00866FDE /* QNResolver.m in Sources */,
				DF801F6B1B396DA000866FDE /* QNDnsManager.m in Sources */,
				DF801F7F1B396E7600866FDE /* QNDnspodFree.m in Sources */,
				DF1552441B3A9536008D3E7C /* ResolverTest.m in Sources */,
				DF801F661B396D5100866FDE /* QNRecord.m in Sources */,
				DF801F8E1B39743200866FDE /* QNDomain.m in Sources */,
				DF801F841B396E9A00866FDE /* QNHosts.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		DF801F911B3A4F4D00866FDE /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				DF801F9A1B3A4F4D00866FDE /* HappyDNS.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		DF801F9B1B3A4F4D00866FDE /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				DF801FAE1B3A537800866FDE /* QNDnsManager.h in Sources */,
				DF801FAF1B3A537800866FDE /* QNDnsManager.m in Sources */,
				DF801FB01B3A537800866FDE /* QNRecord.h in Sources */,
				DF1552451B3A9536008D3E7C /* ResolverTest.m in Sources */,
				DF801FB11B3A537800866FDE /* QNRecord.m in Sources */,
				DF801FB21B3A537800866FDE /* QNResolverDelegate.h in Sources */,
				DF801FB31B3A537800866FDE /* QNDomain.h in Sources */,
				DF801FB41B3A537800866FDE /* QNDomain.m in Sources */,
				DF801FB61B3A537800866FDE /* QNResolver.h in Sources */,
				DF801FB71B3A537800866FDE /* QNResolver.m in Sources */,
				DF801FBA1B3A537800866FDE /* QNHosts.h in Sources */,
				DF801FBB1B3A537800866FDE /* QNHosts.m in Sources */,
				DF801FBC1B3A537800866FDE /* QNDnspodFree.h in Sources */,
				DF801FBD1B3A537800866FDE /* QNDnspodFree.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		DF22C0CD1B37B9B90010FEBF /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = DF22C0BE1B37B9B90010FEBF /* HappyDNS_Mac */;
			targetProxy = DF22C0CC1B37B9B90010FEBF /* PBXContainerItemProxy */;
		};
		DF801FA21B3A4F4D00866FDE /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = DF801F941B3A4F4D00866FDE /* HappyDNS_iOS */;
			targetProxy = DF801FA11B3A4F4D00866FDE /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		DF22C0D11B37B9B90010FEBF /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.8;
				MTL_ENABLE_DEBUG_INFO = YES;
				ONLY_ACTIVE_ARCH = YES;
				PRODUCT_NAME = HappyDNS;
				SDKROOT = macosx;
			};
			name = Debug;
		};
		DF22C0D21B37B9B90010FEBF /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.8;
				MTL_ENABLE_DEBUG_INFO = NO;
				PRODUCT_NAME = HappyDNS;
				SDKROOT = macosx;
			};
			name = Release;
		};
		DF22C0D41B37B9B90010FEBF /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				EXECUTABLE_PREFIX = lib;
				PRODUCT_NAME = HappyDNS;
			};
			name = Debug;
		};
		DF22C0D51B37B9B90010FEBF /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				EXECUTABLE_PREFIX = lib;
				PRODUCT_NAME = HappyDNS;
			};
			name = Release;
		};
		DF22C0D71B37B9B90010FEBF /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 1E328F479E1702CED8C0DDDC /* Pods-HappyDNS_MacTests.debug.xcconfig */;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(DEVELOPER_FRAMEWORKS_DIR)",
					"$(inherited)",
				);
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				INFOPLIST_FILE = HappyDNSTests/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/../Frameworks @loader_path/../Frameworks";
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Debug;
		};
		DF22C0D81B37B9B90010FEBF /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 1DEA89BB118E6B53C505D328 /* Pods-HappyDNS_MacTests.release.xcconfig */;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(DEVELOPER_FRAMEWORKS_DIR)",
					"$(inherited)",
				);
				INFOPLIST_FILE = HappyDNSTests/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/../Frameworks @loader_path/../Frameworks";
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Release;
		};
		DF801FA71B3A4F4D00866FDE /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				IPHONEOS_DEPLOYMENT_TARGET = 8.3;
				OTHER_LDFLAGS = "-ObjC";
				PRODUCT_NAME = HappyDNS;
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
			};
			name = Debug;
		};
		DF801FA81B3A4F4D00866FDE /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				IPHONEOS_DEPLOYMENT_TARGET = 8.3;
				OTHER_LDFLAGS = "-ObjC";
				PRODUCT_NAME = HappyDNS;
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				VALIDATE_PRODUCT = YES;
			};
			name = Release;
		};
		DF801FAA1B3A4F4D00866FDE /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = A7C629E8C4C0F06862464808 /* Pods-HappyDNS_iOSTests.debug.xcconfig */;
			buildSettings = {
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				FRAMEWORK_SEARCH_PATHS = (
					"$(SDKROOT)/Developer/Library/Frameworks",
					"$(inherited)",
				);
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				INFOPLIST_FILE = HappyDNSTests/Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 8.3;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = iphoneos;
			};
			name = Debug;
		};
		DF801FAB1B3A4F4D00866FDE /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 2A93CF6550EE709B01A78948 /* Pods-HappyDNS_iOSTests.release.xcconfig */;
			buildSettings = {
				FRAMEWORK_SEARCH_PATHS = (
					"$(SDKROOT)/Developer/Library/Frameworks",
					"$(inherited)",
				);
				INFOPLIST_FILE = HappyDNSTests/Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 8.3;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = iphoneos;
				VALIDATE_PRODUCT = YES;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		DF22C0BA1B37B9B90010FEBF /* Build configuration list for PBXProject "HappyDNS" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				DF22C0D11B37B9B90010FEBF /* Debug */,
				DF22C0D21B37B9B90010FEBF /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		DF22C0D31B37B9B90010FEBF /* Build configuration list for PBXNativeTarget "HappyDNS_Mac" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				DF22C0D41B37B9B90010FEBF /* Debug */,
				DF22C0D51B37B9B90010FEBF /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		DF22C0D61B37B9B90010FEBF /* Build configuration list for PBXNativeTarget "HappyDNS_MacTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				DF22C0D71B37B9B90010FEBF /* Debug */,
				DF22C0D81B37B9B90010FEBF /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		DF801FA61B3A4F4D00866FDE /* Build configuration list for PBXNativeTarget "HappyDNS_iOS" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				DF801FA71B3A4F4D00866FDE /* Debug */,
				DF801FA81B3A4F4D00866FDE /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		DF801FA91B3A4F4D00866FDE /* Build configuration list for PBXNativeTarget "HappyDNS_iOSTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				DF801FAA1B3A4F4D00866FDE /* Debug */,
				DF801FAB1B3A4F4D00866FDE /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = DF22C0B71B37B9B90010FEBF /* Project object */;
}
